name: CI/CD

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - 'README.md'

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set-var.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set var
        id: set-var
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=dga-board" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV
          echo "GIT_EMAIL=winnertree@naver.com" >> $GITHUB_ENV
          echo "GIT_NAME=winnertree" >> $GITHUB_ENV

      
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: chmod 
        run: chmod +x ./gradlew  

      - name: Execute Gradle build
        run: ./gradlew build -x test

      - name: Docker image Build
        id: build-image
        run: |
          docker build \
            -f Dockerfile \
            --build-arg PSQL_HOST=${{ secrets.PSQL_HOST }} \
            --build-arg PSQL_PORT=${{ secrets.PSQL_PORT }} \
            --build-arg PSQL_USERNAME=${{ secrets.PSQL_USERNAME }} \
            --build-arg PSQL_PASSWORD=${{ secrets.PSQL_PASSWORD }} \
            --build-arg BOARD_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg BOARD_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg MONGO_HOST=${{ secrets.MONGO_HOST }} \
            --build-arg MONGO_PORT=${{ secrets.MONGO_PORT }} \
            --build-arg MONGO_USERNAME=${{ secrets.MONGO_USERNAME }} \
            --build-arg MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Docker image Push
        id: push-image
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Checkout Other Repository
        uses: actions/checkout@v2
        with:
          repository: DGA-PROJECT/dga-deploy
          ref: main  # branch
          token: ${{ secrets.GH_TOKEN }}
      - name: k8s manifest update
        run: |
          sed -i "s@ \
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:.*@ \
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}@g" board/deployment.yml 

      - name: Commit and Push
        run: |
          git config user.email ${{ env.GIT_EMAIL }}
          git config user.name ${{ env.GIT_NAME }}
          git add board/deployment.yml
          git commit -m "Update image tag board/deployment.yml "
          git push origin main
